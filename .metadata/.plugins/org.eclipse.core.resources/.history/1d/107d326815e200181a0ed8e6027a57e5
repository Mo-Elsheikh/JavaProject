
 public class HomeWorke {
	public int Fib( int n) { 
	   if (n == 1) { 
	       return 0;
	   } // End if 
	   else if (n == 2) {
	       return 1;
	   } // End else if 
	   else {
	         int f1 = 0;
	         int f2 = 1;
	         int fib = 0;

	         for ( int i=3 ; i<= n; i++ ) {
	               fib = f1 + f2;
	               f1 = f2;
	               f2 = fib;
	         } // End for loop
	         return fib;
	   } //End else
	} // End fib
	
 /****************************************************************************/	   
	public  int FibR( int n) {
	   if (n == 1) {
	       return 0; 
	   } // End if  
	   else if(n == 2) {
	          return 1;
	    } // End else if
	   else {
	       return FibR(n-1) + FibR(n-2);

	   } // End else
	} // End    
 /****************************************************************************/	
	public int  factorial ( int n) {
	   if( n== 0 ) {
	       return 1;
	   } // End if
	   else {
	       return n * factorial(n - 1);
       } // End  else 

    } // End factorial
 /****************************************************************************/
	public int iterativeFactorial (int n) {
		int factorial = 1 ;
		for ( int i = 1 ; i <= n ;i++) {
			factorial = factorial * i ; 
		} // End for loop
		return factorial;
    } // End 
 /****************************************************************************/
	  public boolean searchData(T data) {
		  boolean found = false ;
	       Node temp = headNode;
	       while ( temp != null ) {
	           if ( temp.data.equals(data) ){
	        	    found = true ; 
	           }
	           temp = temp.next;
	       }
	       return found ;
	   }
  */
}